CMAKE_MINIMUM_REQUIRED (VERSION 2.8)

SET(CMAKE_LEGACY_CYGWIN_WIN32 0)
SET(CMAKE_MACOSX_RPATH ON)

PROJECT(capone C)

SET(CMAKE_INCLUDE_CURRENT_DIR ON)

SET(CMAKE_MODULE_PATH
    ${CMAKE_MODULE_PATH}
    ${PROJECT_SOURCE_DIR}/cmake/)

FIND_PACKAGE(PkgConfig REQUIRED)
FIND_PACKAGE(cmocka REQUIRED)
FIND_PACKAGE(ProtobufC REQUIRED)
FIND_PACKAGE(Threads REQUIRED)

PKG_CHECK_MODULES(SODIUM REQUIRED libsodium)
PKG_CHECK_MODULES(X11 x11 xtst xi)

INCLUDE(CheckFunctionExists)

CHECK_FUNCTION_EXISTS(sched_setaffinity HAVE_SCHED)
CHECK_FUNCTION_EXISTS(clock_gettime HAVE_CLOCK_GETTIME)
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.in ${CMAKE_CURRENT_BINARY_DIR}/config.h)

INCLUDE_DIRECTORIES(SYSTEM
    ${PROTOBUFC_INCLUDE_DIRS}
    ${CMOCKA_INCLUDE_DIR}
    ${SODIUM_INCLUDE_DIRS})
LINK_DIRECTORIES(${SODIUM_LIBRARY_DIRS})

ADD_DEFINITIONS(-DVERSION="0.0.1")
ADD_DEFINITIONS(-D_POSIX_C_SOURCE=200809L)
ADD_DEFINITIONS(-D_DEFAULT_SOURCE)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -Wextra -Werror -pedantic -std=c89")

PROTOBUF_GENERATE_C(PROTO_SOURCES PROTO_HEADERS
    proto/capabilities.proto
    proto/connect.proto
    proto/discovery.proto
    proto/encryption.proto
    proto/test.proto)

ADD_LIBRARY(cpn SHARED
    lib/acl.c
    lib/bench.c
    lib/caps.c
    lib/cfg.c
    lib/channel.c
    lib/common.c
    lib/keys.c
    lib/log.c
    lib/parameter.c
    lib/proto.c
    lib/proto-enc.c
    lib/server.c
    lib/session.c
    lib/service.c
    service/capabilities.c
    service/exec.c
    service/invoke.c
    service/synergy.c
    service/test.c
    service/xpra.c
    ${PROTO_SOURCES})
TARGET_LINK_LIBRARIES(cpn
    ${SODIUM_LIBRARIES}
    ${PROTOBUFC_LIBRARIES}
    ${CMAKE_THREAD_LIBS_INIT})

ADD_EXECUTABLE(cpn-client cpn-client.c)
TARGET_LINK_LIBRARIES(cpn-client cpn)

ADD_EXECUTABLE(cpn-discover cpn-discover.c)
TARGET_LINK_LIBRARIES(cpn-discover cpn)

ADD_EXECUTABLE(cpn-discover-responder cpn-discover-responder.c)
TARGET_LINK_LIBRARIES(cpn-discover-responder cpn)

ADD_EXECUTABLE(cpn-genkey cpn-genkey.c)
TARGET_LINK_LIBRARIES(cpn-genkey cpn)

ADD_EXECUTABLE(cpn-server cpn-server.c)
TARGET_LINK_LIBRARIES(cpn-server cpn)

ADD_EXECUTABLE(cpn-test cpn-test.c
    test/acl.c
    test/caps.c
    test/cfg.c
    test/channel.c
    test/common.c
    test/keys.c
    test/parameter.c
    test/proto.c
    test/server.c
    test/service.c
    test/session.c)
TARGET_LINK_LIBRARIES(cpn-test cpn cmocka)

ADD_EXECUTABLE(cpn-bench-throughput cpn-bench-throughput.c)
TARGET_LINK_LIBRARIES(cpn-bench-throughput cpn)

ADD_EXECUTABLE(cpn-bench-latency cpn-bench-latency.c)
TARGET_LINK_LIBRARIES(cpn-bench-latency cpn)

IF(X11_FOUND)
    ADD_EXECUTABLE(cpn-bench-input cpn-bench-input.c)
    TARGET_LINK_LIBRARIES(cpn-bench-input cpn ${X11_LIBRARIES})
ENDIF(X11_FOUND)
